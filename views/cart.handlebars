<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mi Carrito</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
  <div class="container mt-5">
    <h1>Carrito de Compras</h1>

    <div class="row">
      {{#if cart.products.length}}
        {{#each cart.products}}
          <div class="cart-item d-flex align-items-center justify-content-between border p-3 rounded mb-3">
            <div>
              <p class="fw-bold">{{this.productId.name }}</p>
              <p class="text-muted">Precio: ${{this.productId.price}}</p>
            </div>

            <div class="input-group w-25">
              <button class="btn btn-outline-secondary decrement-btn" data-product-id="{{this.productId._id}}">-</button>
              <input type="number" class="form-control text-center quantity-input" 
                    data-product-id="{{this.productId._id}}" value="{{this.quantity}}" min="1">
              <button class="btn btn-outline-secondary increment-btn" data-product-id="{{this.productId._id}}">+</button>
            </div>

            <button class="btn btn-success update-quantity-btn" data-cart-id="{{../cart._id}}" data-product-id="{{this.productId._id}}">
              Guardar
            </button>

            <button class="btn btn-danger delete-product-btn" data-cart-id="{{../cart._id}}" data-product-id="{{this.productId._id}}">
              ðŸ—‘
            </button>
          </div>
        {{/each}}
      {{else}}
        <p>No hay productos en el carrito.</p>
      {{/if}}
    </div>
    
    <a href="/products" class="btn btn-primary">Volver a la tienda</a>
    <button id="empty-cart-btn" class="btn btn-warning">Vaciar Carrito</button>

  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".delete-product-btn").forEach(button => {
      button.addEventListener("click", async function () {
        const cartId = this.getAttribute("data-cart-id");
        const productId = this.getAttribute("data-product-id");

        if (!cartId || !productId) {
          console.error("Error: Falta el ID del carrito o del producto");
          return;
        }

        try {
          const response = await fetch(`/cart/${cartId}/products/${productId}`, {
            method: "DELETE",
          });

          if (response.ok) {
            window.location.reload(); 
          } else {
            console.error("Error al eliminar producto del carrito");
          }
        } catch (error) {
          console.error("Error en la solicitud:", error);
        }
      });
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    document.getElementById("empty-cart-btn").addEventListener("click", async function () {
      const cartId = "{{cart._id}}";

      if (!cartId) {
        console.error("Error: No hay un cartId disponible");
        return;
      }

      try {
        const response = await fetch(`/cart/${cartId}/clear`, { method: "DELETE" });

        if (response.ok) {
          window.location.reload(); 
        } else {
          console.error("Error al vaciar el carrito");
        }
      } catch (error) {
        console.error("Error en la solicitud:", error);
      }
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".increment-btn").forEach(button => {
      button.addEventListener("click", function () {
        const input = this.previousElementSibling;
        input.value = parseInt(input.value) + 1;
      });
    });

    document.querySelectorAll(".decrement-btn").forEach(button => {
      button.addEventListener("click", function () {
        const input = this.nextElementSibling;
        if (input.value > 1) input.value = parseInt(input.value) - 1;
      });
    });

    document.querySelectorAll(".update-quantity-btn").forEach(button => {
      button.addEventListener("click", async function () {
        const cartId = this.getAttribute("data-cart-id");
        const productId = this.getAttribute("data-product-id");
        const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
        const quantity = input.value;

        if (!cartId || !productId || quantity <= 0) {
          alert("Cantidad invÃ¡lida");
          return;
        }

        try {
          const response = await fetch(`/cart/${cartId}/products/${productId}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ quantity })
          });

          if (response.ok) {
            window.location.reload();
          } else {
            alert("Error al actualizar la cantidad");
          }
        } catch (error) {
          console.error("Error en la solicitud:", error);
        }
      });
    });
  });
</script>
</body>
</html>
